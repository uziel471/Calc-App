{"version":3,"sources":["components/Button/index.jsx","App.jsx","components/Numbers.jsx","components/Functions.jsx","components/MathOperations.jsx","components/Result.jsx","index.jsx"],"names":["Button","type","text","clickHandler","className","onClick","App","useState","stack","setStack","items","words","value","length","onClickNumber","number","onContentClear","onDelete","newStack","substring","onClickOperation","operation","onClickEqual","equal","eval","toString","numbers","renderButtons","map","item","Numbers","prototype","clickHandlerFunction","PropType","func","isRequired","Functions","PropTypes","MathOperations","Result","defaultProps","ReactDom","render","document","querySelector"],"mappings":"yGAAA,sBAeeA,IAZF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,aAAf,OACT,wBAAQC,UAAWH,EAAMI,QAAS,kBAAIF,EAAaD,IAAnD,SACI,+BACKA,Q,suCCCPI,IAAK,SAALA,MACF,cAAuBC,oDAAS,IAAhC,2MAAOC,MAAP,cAAaC,SAAb,cACMC,MAAMC,kDAAMH,MAAQ,gBACpBI,MAAMF,MAAMG,OAAO,EAAIH,MAAMA,MAAMG,OAAS,GAAK,IACvD,OACI,oEAAMT,UAAU,mBAAhB,UACI,2DAAC,kDAAD,CAAQQ,MAASA,QACjB,2DAAC,mDAAD,CAASE,cAAe,SAAAC,GAAM,OAAGN,SAAS,GAAD,OAAID,OAAJ,OAAYO,OACrD,2DAAC,qDAAD,CAAYC,eAAgB,kBAAKP,SAAS,KAC9BQ,SAAU,WACV,GAAGT,MAAMK,OAAO,EAAE,CACd,IAAMK,EAASV,MAAMW,UAAU,EAAEX,MAAMK,OAAO,GAC9CJ,SAASS,OAKzB,2DAAC,0DAAD,CAAgBE,iBAAkB,SAAAC,GAAYZ,SAAS,GAAD,OAAID,OAAJ,OAAYa,KAClDC,aAAc,sBAAAC,OAAQd,SAASe,KAAKhB,OAAOiB,mBAKxDnB,2B,8BC9Bf,uCAIMoB,EAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC3BC,EAAc,SAACb,GAWjB,OAAOY,EAAQE,KAPK,SAAAC,GAAI,OACpB,cAAC,IAAD,CAEI3B,KAAM2B,EAAKJ,WACXtB,aAAcW,GAFTe,OAOXC,EAAQ,SAAC,GAAqB,IAAnBhB,EAAkB,EAAlBA,cACb,OACI,yBAASV,UAAU,UAAnB,SACKuB,EAAcb,MAI3BgB,EAAQC,UAAU,CACdC,qBAAqBC,IAASC,KAAKC,YAExBL,O,6BC5Bf,uCAGMM,EAAU,SAAC,GAA8B,IAA7BpB,EAA4B,EAA5BA,eAAgBC,EAAY,EAAZA,SAC9B,OACI,0BAASb,UAAU,YAAnB,UACI,cAAC,IAAD,CAAQH,KAAK,mBAAmBC,KAAK,QAAQC,aAAca,IAC3D,cAAC,IAAD,CAAQd,KAAK,SAASC,aAAcc,QAIhDmB,EAAUL,UAAU,CAChBf,eAAeqB,IAAUH,KAAKC,WAC9BlB,SAASoB,IAAUH,KAAKC,YAEbC,O,6BCff,uBAkBeE,IAfM,SAAC,GAAoC,IAAnClB,EAAkC,EAAlCA,iBAAkBE,EAAgB,EAAhBA,aACrC,OACI,0BAASlB,UAAU,kBAAnB,UACI,cAAC,IAAD,CAAQF,KAAK,IAAIC,aAAciB,IAC/B,cAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAciB,IAC/B,cAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAciB,IAC/B,cAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAciB,IAC/B,cAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAcmB,S,6BCV3C,gBAEMiB,EAAO,SAAC,GAAD,IAAE3B,EAAF,EAAEA,MAAF,OACT,qBAAKR,UAAU,SAAf,SACI,+BAAOQ,OAMf2B,EAAOC,aAAa,CAChB5B,MAAM,KAEK2B,O,8BCbf,8CAGAE,IAASC,OACL,cAAC,IAAD,IACAC,SAASC,cAAc,W","file":"static/js/main.054b119b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css'\r\nconst Button=({ type, text, clickHandler})=>(\r\n    <button className={type} onClick={()=>clickHandler(text)}>\r\n        <span>\r\n            {text}\r\n        </span>\r\n    </button>\r\n)\r\nButton.propTypes={\r\n    type: PropTypes.string, \r\n    text: PropTypes.string.isRequired,\r\n    clickHandler: PropTypes.func.isRequired\r\n}\r\nexport default Button;","import React,{useState} from 'react';\r\nimport { words } from 'lodash';\r\nimport Numbers from './components/Numbers';\r\nimport Functions from './components/Functions';\r\nimport MathOperations from './components/MathOperations';\r\nimport './App.css';\r\nimport Result from './components/Result';\r\nconst App =()=>{\r\n    const [stack,setStack]=useState(\"\")\r\n    const items=words(stack , /[^-^+^*^/]+/g)\r\n    const value=items.length>0 ? items[items.length - 1] : \"0\"\r\n    return(\r\n        <main className='react-calculator'>\r\n            <Result value = {value} />\r\n            <Numbers onClickNumber={number =>setStack(`${stack}${number}`)}/>\r\n            <Functions  onContentClear={( )=>setStack('')}\r\n                        onDelete={()=>{\r\n                        if(stack.length>0){\r\n                            const newStack=stack.substring(0,stack.length-1)\r\n                            setStack(newStack)\r\n                        }\r\n                    }\r\n                }\r\n            />\r\n            <MathOperations onClickOperation={operation=>{setStack(`${stack}${operation}`)}}\r\n                            onClickEqual={equal=>{setStack(eval(stack).toString())}} />\r\n        </main> \r\n    )\r\n}\r\n//Exportacion\r\nexport default App;","import React from 'react';\r\nimport Button from './Button/index';\r\nimport PropType from 'prop-types';\r\n\r\nconst numbers=[7,8,9,4,5,6,1,2,3,0];\r\nconst renderButtons=(onClickNumber)=>{\r\n    //var number 0\r\n    //iterar desde el boton 1 al 0\r\n    //<Button text={number.toString} clickHandler={onClickNumber}/>\r\n    const renderButton= item=>(\r\n        <Button \r\n            key={item} \r\n            text={item.toString()} \r\n            clickHandler={onClickNumber}\r\n        />\r\n    )\r\n    return numbers.map(renderButton)\r\n}\r\nconst Numbers=({ onClickNumber })=>{\r\n    return(\r\n        <section className=\"numbers\">\r\n            {renderButtons(onClickNumber)}\r\n        </section>\r\n    )\r\n}\r\nNumbers.prototype={\r\n    clickHandlerFunction:PropType.func.isRequired\r\n}\r\nexport default Numbers;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button/index';\r\nconst Functions=({onContentClear, onDelete})=>{\r\n    return(\r\n        <section className=\"functions\">\r\n            <Button type=\"button-long-text\" text=\"Clear\" clickHandler={onContentClear}/>\r\n            <Button text=\"&larr;\" clickHandler={onDelete}/>\r\n        </section>\r\n    )\r\n}\r\nFunctions.prototype={\r\n    onContentClear:PropTypes.func.isRequired, \r\n    onDelete:PropTypes.func.isRequired\r\n}\r\nexport default Functions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button/index';\r\nconst MathOperations=({onClickOperation, onClickEqual})=>{\r\n    return(\r\n        <section className=\"math-operations\">\r\n            <Button text=\"+\" clickHandler={onClickOperation}/>\r\n            <Button text=\"-\" clickHandler={onClickOperation}/>\r\n            <Button text=\"*\" clickHandler={onClickOperation}/>\r\n            <Button text=\"/\" clickHandler={onClickOperation}/>\r\n            <Button text=\"=\" clickHandler={onClickEqual}/>\r\n        </section>\r\n    )\r\n}\r\nMathOperations.propTypes={\r\n    onClickOperation:PropTypes.func.isRequired, \r\n    onClickEqual:PropTypes.func.isRequired\r\n}\r\nexport default MathOperations;","import React from 'react';\r\nimport PorpTypes from 'prop-types';\r\nconst Result=({value })=>(\r\n    <div className=\"result\">\r\n        <span>{value}</span>\r\n    </div>\r\n)\r\nResult.propTypes ={\r\n    value:PorpTypes.string.isRequired\r\n}\r\nResult.defaultProps={\r\n    value:\"0\"\r\n}\r\nexport default Result;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\nReactDom.render(\r\n    <App/>,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}